CCS PCM C Compiler, Version 5.109, 43599               14-May-23 14:39

               Filename:   E:\PIC 16F887\Code\dieuchePWM.lst

               ROM used:   188 words (2%)
                           Largest free fragment is 2048
               RAM used:   9 (2%) at main() level
                           14 (4%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   03D
0003:  NOP
.................... #include<16F887.h>
.................... //////////// Standard Header file for the PIC16F887 device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F887
0004:  BCF    0A.0
0005:  BCF    0A.1
0006:  BCF    0A.2
0007:  ADDWF  02,F
0008:  RETLW  C0
0009:  RETLW  F9
000A:  RETLW  A4
000B:  RETLW  B0
000C:  RETLW  99
000D:  RETLW  92
000E:  RETLW  82
000F:  RETLW  F8
0010:  RETLW  80
0011:  RETLW  90
*
0026:  MOVLW  10
0027:  MOVWF  28
0028:  CLRF   77
0029:  CLRF   7A
002A:  RRF    25,F
002B:  RRF    24,F
002C:  BTFSS  03.0
002D:  GOTO   034
002E:  MOVF   26,W
002F:  ADDWF  77,F
0030:  BTFSC  03.0
0031:  INCF   7A,F
0032:  MOVF   27,W
0033:  ADDWF  7A,F
0034:  RRF    7A,F
0035:  RRF    77,F
0036:  RRF    79,F
0037:  RRF    78,F
0038:  DECFSZ 28,F
0039:  GOTO   02A
003A:  BCF    0A.3
003B:  BCF    0A.4
003C:  GOTO   09E (RETURN)
.................... 
.................... #list
.................... 
.................... #fuses INTRC_IO
.................... #use delay(CLOCK=8MHz)  //Fosc=8 MHz
*
0012:  MOVLW  22
0013:  MOVWF  04
0014:  BCF    03.7
0015:  MOVF   00,W
0016:  BTFSC  03.2
0017:  GOTO   025
0018:  MOVLW  02
0019:  MOVWF  78
001A:  CLRF   77
001B:  DECFSZ 77,F
001C:  GOTO   01B
001D:  DECFSZ 78,F
001E:  GOTO   01A
001F:  MOVLW  97
0020:  MOVWF  77
0021:  DECFSZ 77,F
0022:  GOTO   021
0023:  DECFSZ 00,F
0024:  GOTO   018
0025:  RETURN
.................... #define ADJ PIN_E0
.................... #define Pulse PIN_C2 
.................... 
.................... 
.................... const unsigned int8 ma7doan[]={ 0xc0 ,0xf9 , 0xa4,0xb0 , 0x99 , 0x92,0x82 ,0xf8 , 0x80, 0x90};
.................... int8 LEVEL = 0 ; 
.................... void main()
*
003D:  MOVF   03,W
003E:  ANDLW  1F
003F:  MOVWF  03
0040:  MOVLW  71
0041:  BSF    03.5
0042:  MOVWF  0F
0043:  CLRF   10
0044:  MOVF   0F,W
0045:  BCF    03.5
0046:  CLRF   20
0047:  MOVLW  FF
0048:  MOVWF  21
0049:  BSF    03.5
004A:  BSF    03.6
004B:  MOVF   09,W
004C:  ANDLW  C0
004D:  MOVWF  09
004E:  BCF    03.6
004F:  BCF    1F.4
0050:  BCF    1F.5
0051:  MOVLW  00
0052:  BSF    03.6
0053:  MOVWF  08
0054:  BCF    03.5
0055:  CLRF   07
0056:  CLRF   08
0057:  CLRF   09
0058:  BCF    03.7
.................... {  
....................    set_tris_c(0x00) ;   
0059:  MOVLW  00
005A:  BSF    03.5
005B:  BCF    03.6
005C:  MOVWF  07
005D:  BCF    03.5
005E:  MOVWF  21
....................    set_tris_e(0xff) ; 
005F:  BSF    03.5
0060:  BSF    09.0
0061:  BSF    09.1
0062:  BSF    09.2
0063:  BSF    09.3
....................    set_tris_d(0x00) ; 
0064:  MOVWF  08
....................    output_d(ma7doan[0]);
0065:  CLRF   08
0066:  MOVLW  C0
0067:  BCF    03.5
0068:  MOVWF  08
....................    setup_timer_2(T2_DIV_BY_16,249,1);
0069:  MOVLW  00
006A:  MOVWF  78
006B:  IORLW  06
006C:  MOVWF  12
006D:  MOVLW  F9
006E:  BSF    03.5
006F:  MOVWF  12
....................    set_timer2(0);
0070:  BCF    03.5
0071:  CLRF   11
....................    setup_ccp1(CCP_PWM);
0072:  BCF    21.2
0073:  MOVF   21,W
0074:  BSF    03.5
0075:  MOVWF  07
0076:  BCF    03.5
0077:  BCF    07.2
0078:  MOVLW  0C
0079:  MOVWF  17
007A:  BSF    03.5
007B:  CLRF   1B
007C:  CLRF   1C
007D:  MOVLW  01
007E:  MOVWF  1D
.................... 
.................... while(TRUE)
.................... {
....................    if(input(ADJ) == 0  ){
007F:  BSF    09.0
0080:  BCF    03.5
0081:  BTFSC  09.0
0082:  GOTO   08F
....................       delay_ms(50);
0083:  MOVLW  32
0084:  MOVWF  22
0085:  CALL   012
....................       LEVEL++ ; 
0086:  INCF   20,F
....................       while(input(ADJ) == 0 ) ; 
0087:  BSF    03.5
0088:  BSF    09.0
0089:  BCF    03.5
008A:  BTFSS  09.0
008B:  GOTO   087
....................       delay_ms(50);   
008C:  MOVLW  32
008D:  MOVWF  22
008E:  CALL   012
....................    }
....................    if (LEVEL > 9) {
008F:  MOVF   20,W
0090:  SUBLW  09
0091:  BTFSS  03.0
....................       LEVEL = 0 ;
0092:  CLRF   20
....................    }
....................    
.................... 
....................    set_PWM1_DUTY((unsigned int16)LEVEL*100);
0093:  CLRF   23
0094:  MOVF   20,W
0095:  MOVWF  22
0096:  MOVF   23,W
0097:  MOVWF  25
0098:  MOVF   20,W
0099:  MOVWF  24
009A:  CLRF   27
009B:  MOVLW  64
009C:  MOVWF  26
009D:  GOTO   026
009E:  MOVF   79,W
009F:  MOVWF  23
00A0:  MOVF   78,W
00A1:  MOVWF  22
00A2:  RRF    23,F
00A3:  RRF    22,F
00A4:  RRF    23,F
00A5:  RRF    22,F
00A6:  RRF    23,F
00A7:  MOVF   22,W
00A8:  MOVWF  15
00A9:  RRF    23,F
00AA:  RRF    23,W
00AB:  ANDLW  30
00AC:  MOVWF  77
00AD:  MOVF   17,W
00AE:  ANDLW  CF
00AF:  IORWF  77,W
00B0:  MOVWF  17
....................    output_d(ma7doan[LEVEL]) ; 
00B1:  MOVF   20,W
00B2:  CALL   004
00B3:  MOVWF  22
00B4:  BSF    03.5
00B5:  CLRF   08
00B6:  BCF    03.5
00B7:  MOVF   22,W
00B8:  MOVWF  08
00B9:  BSF    03.5
00BA:  GOTO   07F
.................... 
.................... 
....................    
.................... }
.................... }
00BB:  SLEEP

Configuration Fuses:
   Word  1: 2FE4   INTRC_IO NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
