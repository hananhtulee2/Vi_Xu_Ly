CCS PCM C Compiler, Version 5.109, 43599               30-Mar-23 22:24

               Filename:   E:\PIC 16F887\Code\lednhapnhay\lednhapnhay.lst

               ROM used:   75 words (1%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           7 (2%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   018
0003:  NOP
.................... #include <16F887.h>
.................... //////////// Standard Header file for the PIC16F887 device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F887
.................... 
.................... #list
.................... 
.................... #fuses INTRC
.................... #use delay(clock=8MHz)
0004:  MOVLW  22
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  02
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  97
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  RETURN
.................... 
.................... #define Led    PIN_D0
.................... 
.................... void main()
0018:  MOVF   03,W
0019:  ANDLW  1F
001A:  MOVWF  03
001B:  MOVLW  71
001C:  BSF    03.5
001D:  MOVWF  0F
001E:  CLRF   10
001F:  MOVF   0F,W
0020:  BSF    03.6
0021:  MOVF   09,W
0022:  ANDLW  C0
0023:  MOVWF  09
0024:  BCF    03.6
0025:  BCF    1F.4
0026:  BCF    1F.5
0027:  MOVLW  00
0028:  BSF    03.6
0029:  MOVWF  08
002A:  BCF    03.5
002B:  CLRF   07
002C:  CLRF   08
002D:  CLRF   09
002E:  BCF    03.7
.................... {
.................... set_tris_d(0b11111111);//RD0 la ngo ra
002F:  MOVLW  FF
0030:  BSF    03.5
0031:  BCF    03.6
0032:  MOVWF  08
.................... //output_low(Led);//xuat muc thap ra Led
.................... while(TRUE)//1,#1 (#0)
.................... {
.................... output_high(Led);//xuat muc cao ra Led
0033:  BCF    08.0
0034:  BCF    03.5
0035:  BSF    08.0
.................... delay_ms(500);//tri hoan 500ms
0036:  MOVLW  02
0037:  MOVWF  21
0038:  MOVLW  FA
0039:  MOVWF  22
003A:  CALL   004
003B:  DECFSZ 21,F
003C:  GOTO   038
.................... output_low(Led);//xuat muc thap ra Led
003D:  BSF    03.5
003E:  BCF    08.0
003F:  BCF    03.5
0040:  BCF    08.0
.................... delay_ms(500);//tri hoan 500ms
0041:  MOVLW  02
0042:  MOVWF  21
0043:  MOVLW  FA
0044:  MOVWF  22
0045:  CALL   004
0046:  DECFSZ 21,F
0047:  GOTO   043
0048:  BSF    03.5
0049:  GOTO   033
.................... }
.................... }
.................... 
004A:  SLEEP

Configuration Fuses:
   Word  1: 2FE5   INTRC NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
